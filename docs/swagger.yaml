definitions:
  controller.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  controller.SignInRequest:
    properties:
      login:
        type: string
    type: object
  models.Article:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      full_name:
        type: string
      id:
        type: integer
      login:
        type: string
    type: object
info:
  contact:
    email: nekruzrakhimov@icloud.com
    name: API eBlog
    url: https://test.com/
  title: eBlog service
paths:
  /articles:
    get:
      consumes:
      - application/json
      description: Returns articles of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Article'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all articles of the user
      tags:
      - articles
    post:
      consumes:
      - application/json
      description: Create a new article for the authenticated user
      parameters:
      - description: Article data
        in: body
        name: article
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Article'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new article
      tags:
      - articles
  /refresh:
    post:
      consumes:
      - application/json
      description: Генерирует новый access token по refresh token
      parameters:
      - description: Refresh токен
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controller.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновление access токена
      tags:
      - auth
  /signin:
    post:
      consumes:
      - application/json
      description: Получение access и refresh токенов
      parameters:
      - description: Данные для входа
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controller.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
